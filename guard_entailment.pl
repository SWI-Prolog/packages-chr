/*  Generated by CHR bootstrap compiler
    From: guard_entailment.chr
    Date: Fri Jan 21 10:00:48 2005

    DO NOT EDIT.  EDIT THE CHR FILE INSTEAD
*/

:-module(guard_entailment, [entails_guard/2, simplify_guards/5]).
:-use_module(chr_runtime).
:-style_check(-singleton).
:-style_check(- (discontiguous)).
:-use_module(library(lists)).
:-use_module(hprolog).
:-use_module(builtins).
entails_guard(A, B) :-
	copy_term_nat((A, B), (C, D)),
	term_variables(C, E),
	variables(E),
	entails_guard2(C), !,
	test(D), !,
	cleanup.
entails_guard2([]).
entails_guard2([A|B]) :-
	known(A),
	entails_guard2(B).
simplify_guards(A, B, C, D, E) :-
	copy_term_nat((A, C), (F, G)),
	term_variables(F, H),
	variables(H),
	entails_guard2(F), !,
	simplify(G, I),
	simplified(C, I, D, B, E), !,
	cleanup.
simplified([], [], [], A, A).
simplified([A|B], [keep|C], [A|D], E, F) :-
	simplified(B, C, D, E, F).
simplified([A|B], [fail|C], fail, D, D).
simplified([A|B], [true|C], [D|E], F, G) :-
	builtins:binds_b(A, H),
	term_variables(B, I),
	intersect_eq(H, I, J), !,
	(   J=[]
	->  term_variables(F, K),
	    intersect_eq(H, K, L), !,
	    (   L=[]
	    ->  D=true,
		G=M
	    ;   D=true,
		G= (A, M)
	    )
	;   D=A,
	    G=M
	),
	simplified(B, C, E, F, M).
simplify([], []).
simplify([A|B], [C|D]) :-
	(   \+try(true, A)
	->  C=true
	;   builtins:negate_b(A, E),
	    (   \+try(true, E)
	    ->  C=fail
	    ;   C=keep
	    )
	),
	known(A),
	simplify(B, D).
try(A, B) :-
	(   known(A)
	->  true
	;   format(' ERROR: entailment checker: this is not supposed to happen.\n', [])
	),
	(   test(B)
	->  fail
	;   true
	).
lookup([], [], A, B) :-
	fail.
lookup([A|B], [C|D], E, F) :-
	(   E==A
	->  F=C
	;   lookup(B, D, E, F)
	).
add_args_unif([], [], true).
add_args_unif([A|B], [C|D], (A=C, E)) :-
	add_args_unif(B, D, E).
add_args_nunif([], [], fail).
add_args_nunif([A|B], [C|D], (A\=C;E)) :-
	add_args_nunif(B, D, E).
add_args_nmatch([], [], fail).
add_args_nmatch([A|B], [C|D], (A\==C;E)) :-
	add_args_nmatch(B, D, E).
all_unique_vars(A, B) :-
	all_unique_vars(A, B, []).
all_unique_vars([], A, B).
all_unique_vars([A|B], C, D) :-
	var(A),
	\+memberchk_eq(A, C),
	\+memberchk_eq(A, D),
	all_unique_vars(B, [A|D]).
:-use_module(chr(chr_runtime)).
:-use_module(chr(chr_hashtable_store)).
'attach_known/1'([], A).
'attach_known/1'([A|B], C) :-
	(   get_attr(A, guard_entailment, D)
	->  D=v(E, F, G),
	    (   E/\1=:=1
	    ->  put_attr(A, guard_entailment, v(E, [C|F], G))
	    ;   H is E\/1,
		put_attr(A, guard_entailment, v(H, [C], G))
	    )
	;   put_attr(A, guard_entailment, v(1, [C], [C]))
	),
	'attach_known/1'(B, C).
'detach_known/1'([], A).
'detach_known/1'([A|B], C) :-
	(   get_attr(A, guard_entailment, D)
	->  D=v(E, F, G),
	    (   E/\1=:=1
	    ->  'chr sbag_del_element'(F, C, H),
		(   H==[]
		->  I is E/\ -2,
		    (   I==0
		    ->  del_attr(A, guard_entailment)
		    ;   put_attr(A, guard_entailment, v(I, [], G))
		    )
		;   put_attr(A, guard_entailment, v(E, H, G))
		)
	    ;   true
	    )
	;   true
	),
	'detach_known/1'(B, C).
'attach_variables/1'([], A).
'attach_variables/1'([A|B], C) :-
	(   get_attr(A, guard_entailment, D)
	->  D=v(E, F, G),
	    (   E/\2=:=2
	    ->  put_attr(A, guard_entailment, v(E, F, [C|G]))
	    ;   H is E\/2,
		put_attr(A, guard_entailment, v(H, F, [C]))
	    )
	;   put_attr(A, guard_entailment, v(2, [C], [C]))
	),
	'attach_variables/1'(B, C).
'detach_variables/1'([], A).
'detach_variables/1'([A|B], C) :-
	(   get_attr(A, guard_entailment, D)
	->  D=v(E, F, G),
	    (   E/\2=:=2
	    ->  'chr sbag_del_element'(G, C, H),
		(   H==[]
		->  I is E/\ -3,
		    (   I==0
		    ->  del_attr(A, guard_entailment)
		    ;   put_attr(A, guard_entailment, v(I, F, []))
		    )
		;   put_attr(A, guard_entailment, v(E, F, H))
		)
	    ;   true
	    )
	;   true
	),
	'detach_variables/1'(B, C).
'$indexed_variables'(A, B) :-
	A=known(C),
	term_variables(A, B).
'$indexed_variables'(A, B) :-
	A=variables(C),
	term_variables(A, B).
attach_increment([], A).
attach_increment([A|B], v(C, D, E)) :-
	'chr not_locked'(A),
	(   get_attr(A, guard_entailment, F)
	->  F=v(G, H, I),
	    sort(H, J),
	    'chr merge_attributes'(D, J, K),
	    sort(I, L),
	    'chr merge_attributes'(E, L, M),
	    N is C\/G,
	    put_attr(A, guard_entailment, v(N, K, M))
	;   put_attr(A, guard_entailment, v(C, D, E))
	),
	attach_increment(B, v(C, D, E)).
attr_unify_hook(v(A, B, C), D) :-
	sort(B, E),
	sort(C, F),
	(   var(D)
	->  (   get_attr(D, guard_entailment, G)
	    ->  G=v(H, I, J),
		sort(I, K),
		'chr merge_attributes'(E, K, L),
		sort(J, M),
		'chr merge_attributes'(F, M, N),
		O is A\/H,
		put_attr(D, guard_entailment, v(O, L, N)),
		'chr run_suspensions_loop'([L, N])
	    ;   put_attr(D, guard_entailment, v(A, E, F)),
		'chr run_suspensions_loop'([E, F])
	    )
	;   (   compound(D)
	    ->  term_variables(D, P),
		attach_increment(P, v(A, E, F))
	    ;   true
	    ),
	    'chr run_suspensions_loop'([E, F])
	).
activate_constraint(A, B, C, D) :-
	arg(2, C, E),
	E=mutable(F),
	'chr update_mutable'(active, E),
	(   nonvar(D)
	->  true
	;   arg(4, C, G),
	    G=mutable(H),
	    D is H+1,
	    'chr update_mutable'(D, G)
	),
	(   compound(F)
	->  term_variables(F, B),
	    'chr none_locked'(B),
	    A=yes
	;   F==removed
	->  chr_indexed_variables(C, B),
	    A=yes
	;   B=[],
	    A=no
	).
remove_constraint_internal(A, B, C) :-
	arg(2, A, D),
	D=mutable(E),
	'chr update_mutable'(removed, D),
	(   compound(E)
	->  B=[],
	    C=no
	;   E==removed
	->  B=[],
	    C=no
	;   C=yes,
	    chr_indexed_variables(A, B)
	).
allocate_constraint(A, B, C, D) :-
	B=..[suspension, E, F, A, G, H, C|D],
	G=mutable(0),
	'chr empty_history'(I),
	H=mutable(I),
	chr_indexed_variables(B, J),
	F=mutable(passive(J)),
	'chr gen_id'(E).
insert_constraint_internal(yes, A, B, C, D, E) :-
	B=..[suspension, F, G, C, H, I, D|E],
	chr_indexed_variables(B, A),
	'chr none_locked'(A),
	G=mutable(active),
	H=mutable(0),
	I=mutable(J),
	'chr empty_history'(J),
	'chr gen_id'(F).
chr_indexed_variables(A, B) :-
	A=..[C, D, E, F, G, H, I|J],
	'$indexed_variables'(I, B).
'$insert_in_store_known/1'(A) :-
	true,
	'chr global_term_ref_1'(B),
	(   get_attr(B, guard_entailment, C)
	->  C=v(D, E, F),
	    (   D/\1=:=1
	    ->  put_attr(B, guard_entailment, v(D, [A|E], F))
	    ;   G is D\/1,
		put_attr(B, guard_entailment, v(G, [A], F))
	    )
	;   put_attr(B, guard_entailment, v(1, [A], [A]))
	).
'$delete_from_store_known/1'(A) :-
	true,
	'chr global_term_ref_1'(B),
	(   get_attr(B, guard_entailment, C)
	->  C=v(D, E, F),
	    (   D/\1=:=1
	    ->  'chr sbag_del_element'(E, A, G),
		(   G==[]
		->  H is D/\ -2,
		    (   H==0
		    ->  del_attr(B, guard_entailment)
		    ;   put_attr(B, guard_entailment, v(H, [], F))
		    )
		;   put_attr(B, guard_entailment, v(D, G, F))
		)
	    ;   true
	    )
	;   true
	).
'$insert_in_store_variables/1'(A) :-
	true,
	'chr global_term_ref_1'(B),
	(   get_attr(B, guard_entailment, C)
	->  C=v(D, E, F),
	    (   D/\2=:=2
	    ->  put_attr(B, guard_entailment, v(D, E, [A|F]))
	    ;   G is D\/2,
		put_attr(B, guard_entailment, v(G, E, [A]))
	    )
	;   put_attr(B, guard_entailment, v(2, [A], [A]))
	).
'$delete_from_store_variables/1'(A) :-
	true,
	'chr global_term_ref_1'(B),
	(   get_attr(B, guard_entailment, C)
	->  C=v(D, E, F),
	    (   D/\2=:=2
	    ->  'chr sbag_del_element'(F, A, G),
		(   G==[]
		->  H is D/\ -3,
		    (   H==0
		    ->  del_attr(B, guard_entailment)
		    ;   put_attr(B, guard_entailment, v(H, E, []))
		    )
		;   put_attr(B, guard_entailment, v(D, E, G))
		)
	    ;   true
	    )
	;   true
	).
'$enumerate_suspensions'(A) :-
	(   'chr global_term_ref_1'(B),
	    get_attr(B, guard_entailment, C),
	    arg(2, C, D),
	    'chr sbag_member'(A, D)
	;   'chr global_term_ref_1'(E),
	    get_attr(E, guard_entailment, F),
	    arg(3, F, G),
	    'chr sbag_member'(A, G)
	).
known(A) :-
	'known/1__0'(A, B).
'known/1__0'(A, B) :-
	'chr via_1'(A, C),
	get_attr(C, guard_entailment, D),
	D=v(E, F, G),
	E/\1=:=1,
	'chr sbag_member'(H, F),
	H=suspension(I, J, K, L, M, N, O),
	J=mutable(active),
	O==A, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, P, Q),
	    (   Q==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(P, B)
	    ;   true
	    )
	).
'known/1__0'(A, B) :-
	nonvar(A),
	A= (C>D), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(D<C).
'known/1__0'(A, B) :-
	nonvar(A),
	A= (C>=D), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(D=<C).
'known/1__0'(A, B) :-
	nonvar(A),
	A= (C<D), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(C=<D),
	known(C=\=D).
'known/1__0'(A, B) :-
	nonvar(A),
	A= (C is D), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(C=:=D).
'known/1__0'(A, B) :-
	nonvar(A),
	A= (C==D),
	(   var(B)
	->  allocate_constraint(guard_entailment:'known/1__0'(A, B), B, known(A), [A])
	;   true
	),
	'chr novel_production'(B, 21),
	number(C), !,
	'chr extend_history'(B, 21),
	activate_constraint(E, F, B, G),
	(   E==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(F, B)
	;   true
	),
	known(C=:=D),
	(   B=suspension(H, I, J, K, L, M, N),
	    I=mutable(active),
	    K=mutable(G)
	->  'chr update_mutable'(inactive, I),
	    'known/1__1'(A, B)
	;   true
	).
'known/1__0'(A, B) :-
	(   var(B)
	->  allocate_constraint(guard_entailment:'known/1__0'(A, B), B, known(A), [A])
	;   true
	),
	'known/1__1'(A, B).
'known/1__1'(A, B) :-
	nonvar(A),
	A= (C==D),
	'chr novel_production'(B, 22),
	number(D), !,
	'chr extend_history'(B, 22),
	activate_constraint(E, F, B, G),
	(   E==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(F, B)
	;   true
	),
	known(C=:=D),
	(   B=suspension(H, I, J, K, L, M, N),
	    I=mutable(active),
	    K=mutable(G)
	->  'chr update_mutable'(inactive, I),
	    'known/1__2'(A, B)
	;   true
	).
'known/1__1'(A, B) :-
	'known/1__2'(A, B).
'known/1__2'(A, B) :-
	nonvar(A),
	A= (C\==D),
	'chr novel_production'(B, 23),
	number(C), !,
	'chr extend_history'(B, 23),
	activate_constraint(E, F, B, G),
	(   E==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(F, B)
	;   true
	),
	known(C=\=D),
	(   B=suspension(H, I, J, K, L, M, N),
	    I=mutable(active),
	    K=mutable(G)
	->  'chr update_mutable'(inactive, I),
	    'known/1__3'(A, B)
	;   true
	).
'known/1__2'(A, B) :-
	'known/1__3'(A, B).
'known/1__3'(A, B) :-
	nonvar(A),
	A= (C\==D),
	'chr novel_production'(B, 24),
	number(D), !,
	'chr extend_history'(B, 24),
	activate_constraint(E, F, B, G),
	(   E==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(F, B)
	;   true
	),
	known(C=\=D),
	(   B=suspension(H, I, J, K, L, M, N),
	    I=mutable(active),
	    K=mutable(G)
	->  'chr update_mutable'(inactive, I),
	    'known/1__4'(A, B)
	;   true
	).
'known/1__3'(A, B) :-
	'known/1__4'(A, B).
'known/1__4'(A, B) :-
	'chr global_term_ref_1'(C),
	get_attr(C, guard_entailment, D),
	D=v(E, F, G),
	E/\1=:=1,
	'chr sbag_member'(H, F),
	H=suspension(I, J, K, L, M, N, O),
	J=mutable(active),
	O==fail, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, P, Q),
	    (   Q==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(P, B)
	    ;   true
	    )
	).
'known/1__4'(A, B) :-
	A==fail,
	'chr global_term_ref_1'(C),
	get_attr(C, guard_entailment, D),
	D=v(E, F, G),
	E/\1=:=1, !,
	'known/1__4__0'(F, A, B).
'known/1__4__0'([], A, B) :-
	'known/1__5'(A, B).
'known/1__4__0'([A|B], C, D) :-
	(   A=suspension(E, F, G, H, I, J, K),
	    F=mutable(active)
	->  remove_constraint_internal(A, L, M),
	    (   M==yes
	    ->  '$delete_from_store_known/1'(A),
		'detach_known/1'(L, A)
	    ;   true
	    ),
	    'known/1__4__0'(B, C, D)
	;   'known/1__4__0'(B, C, D)
	).
'known/1__4'(A, B) :-
	'known/1__5'(A, B).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C, D), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(C),
	known(D).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C=:=D),
	D==C, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C==D),
	D==C, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C=<D),
	D==C, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C=D),
	D==C, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C=D),
	var(C), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	C=D.
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C=D),
	var(D), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	C=D.
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C\=D),
	var(D),
	var(C),
	'chr lock'(C),
	'chr lock'(D),
	C=D,
	chr_runtime:unlock(C),
	chr_runtime:unlock(D), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C\=D),
	ground(D),
	ground(C),
	'chr lock'(C),
	'chr lock'(D),
	C=D,
	chr_runtime:unlock(C),
	chr_runtime:unlock(D), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__5'(A, B) :-
	nonvar(A),
	A=functor(C, D, E),
	ground(E),
	ground(D),
	var(C),
	'chr global_term_ref_1'(F),
	get_attr(F, guard_entailment, G),
	G=v(H, I, J),
	H/\2=:=2,
	'chr sbag_member'(K, J),
	K=suspension(L, M, N, O, P, Q, R),
	M=mutable(active), !,
	remove_constraint_internal(K, S, T),
	(   T==yes
	->  '$delete_from_store_variables/1'(K),
	    'detach_variables/1'(S, K)
	;   true
	),
	(   var(B)
	->  true
	;   remove_constraint_internal(B, U, V),
	    (   V==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(U, B)
	    ;   true
	    )
	),
	functor(W, D, E),
	C=W,
	C=..[X|Y],
	append(Y, R, Z),
	variables(Z).
'known/1__5'(A, B) :-
	nonvar(A),
	A=functor(C, D, E),
	nonvar(C),
	'chr lock'(C),
	'chr lock'(D),
	'chr lock'(E),
	\+functor(C, D, E),
	chr_runtime:unlock(C),
	chr_runtime:unlock(D),
	chr_runtime:unlock(E), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, F, G),
	    (   G==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(F, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (\+C),
	nonvar(C),
	C=functor(D, E, F),
	nonvar(D),
	'chr lock'(D),
	'chr lock'(E),
	'chr lock'(F),
	functor(D, E, F),
	chr_runtime:unlock(D),
	chr_runtime:unlock(E),
	chr_runtime:unlock(F), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, G, H),
	    (   H==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(G, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__5'(A, B) :-
	nonvar(A),
	A=functor(C, D, E),
	nonvar(E),
	nonvar(D),
	'chr via_1'(C, F),
	get_attr(F, guard_entailment, G),
	G=v(H, I, J),
	H/\1=:=1,
	'chr sbag_member'(K, I),
	K=suspension(L, M, N, O, P, Q, R),
	M=mutable(active),
	nonvar(R),
	R=functor(S, T, U),
	S==C,
	nonvar(U),
	nonvar(T), !,
	remove_constraint_internal(K, V, W),
	(   W==yes
	->  '$delete_from_store_known/1'(K),
	    'detach_known/1'(V, K)
	;   true
	),
	(   var(B)
	->  true
	;   remove_constraint_internal(B, X, Y),
	    (   Y==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(X, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C\=D),
	D==C, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C=D),
	'chr lock'(C),
	functor(C, E, F),
	chr_runtime:unlock(C), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, G, H),
	    (   H==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(G, B)
	    ;   true
	    )
	),
	(   functor(D, E, F),
	    C=D
	->  true
	;   known(fail)
	).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C\=D),
	nonvar(D),
	var(C),
	'chr lock'(D),
	functor(D, E, F),
	F>0,
	chr_runtime:unlock(D), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, G, H),
	    (   H==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(G, B)
	    ;   true
	    )
	),
	length(I, F),
	D=..[E|J],
	K=..[E|I],
	add_args_nunif(J, I, L),
	M= (\+functor(C, E, F);C=K, L),
	known(M).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C\=D),
	nonvar(D),
	nonvar(C),
	'chr lock'(C),
	functor(C, E, F),
	chr_runtime:unlock(C), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, G, H),
	    (   H==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(G, B)
	    ;   true
	    )
	),
	(   functor(D, E, F)
	->  C=..[E|I],
	    D=..[E|J],
	    add_args_nunif(I, J, K),
	    known(K)
	;   true
	).
'known/1__5'(A, B) :-
	nonvar(A),
	A= (C\=D),
	'chr novel_production'(B, 43), !,
	'chr extend_history'(B, 43),
	activate_constraint(E, F, B, G),
	(   E==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(F, B)
	;   true
	),
	known(D\=C),
	(   B=suspension(H, I, J, K, L, M, N),
	    I=mutable(active),
	    K=mutable(G)
	->  'chr update_mutable'(inactive, I),
	    'known/1__6'(A, B)
	;   true
	).
'known/1__5'(A, B) :-
	'known/1__6'(A, B).
'known/1__6'(A, B) :-
	nonvar(A),
	A= (C=<D),
	ground(D),
	ground(C),
	C>D, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__6'(A, B) :-
	nonvar(A),
	A= (C=<D),
	ground(D),
	'chr via_1'(C, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1,
	'chr sbag_member'(J, H),
	J=suspension(K, L, M, N, O, P, Q),
	L=mutable(active),
	nonvar(Q),
	Q= (R=<S),
	R==C,
	ground(S),
	S=<D, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, T, U),
	    (   U==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(T, B)
	    ;   true
	    )
	).
'known/1__6'(A, B) :-
	nonvar(A),
	A= (C=<D),
	'chr via_1'(C, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__6__0'(H, A, B, C, D).
'known/1__6__0'([], A, B, C, D) :-
	'known/1__7'(A, B).
'known/1__6__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N=<O),
	    N==E,
	    ground(O),
	    ground(F),
	    F=<O
	->  remove_constraint_internal(A, P, Q),
	    (   Q==yes
	    ->  '$delete_from_store_known/1'(A),
		'detach_known/1'(P, A)
	    ;   true
	    ),
	    'known/1__6__0'(B, C, D, E, F)
	;   'known/1__6__0'(B, C, D, E, F)
	).
'known/1__6'(A, B) :-
	'known/1__7'(A, B).
'known/1__7'(A, B) :-
	nonvar(A),
	A= (C=<D),
	ground(C),
	'chr via_1'(D, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1,
	'chr sbag_member'(J, H),
	J=suspension(K, L, M, N, O, P, Q),
	L=mutable(active),
	nonvar(Q),
	Q= (R=<S),
	S==D,
	ground(R),
	C=<R, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, T, U),
	    (   U==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(T, B)
	    ;   true
	    )
	).
'known/1__7'(A, B) :-
	nonvar(A),
	A= (C=<D),
	'chr via_1'(D, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__7__0'(H, A, B, C, D).
'known/1__7__0'([], A, B, C, D) :-
	'known/1__8'(A, B).
'known/1__7__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N=<O),
	    O==F,
	    ground(E),
	    ground(N),
	    N=<E
	->  remove_constraint_internal(A, P, Q),
	    (   Q==yes
	    ->  '$delete_from_store_known/1'(A),
		'detach_known/1'(P, A)
	    ;   true
	    ),
	    'known/1__7__0'(B, C, D, E, F)
	;   'known/1__7__0'(B, C, D, E, F)
	).
'known/1__7'(A, B) :-
	'known/1__8'(A, B).
'known/1__8'(A, B) :-
	nonvar(A),
	A= (C=<D),
	'chr via_2'(D, C, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1,
	'chr sbag_member'(J, H),
	J=suspension(K, L, M, N, O, P, Q),
	L=mutable(active),
	nonvar(Q),
	Q= (R=<S),
	R==D,
	S==C, !,
	remove_constraint_internal(J, T, U),
	(   U==yes
	->  '$delete_from_store_known/1'(J),
	    'detach_known/1'(T, J)
	;   true
	),
	(   var(B)
	->  true
	;   remove_constraint_internal(B, V, W),
	    (   W==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(V, B)
	    ;   true
	    )
	),
	known(C=:=D).
'known/1__8'(A, B) :-
	nonvar(A),
	A= (C=<D),
	'chr via_1'(D, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__8__0'(H, A, B, C, D).
'known/1__8__0'([], A, B, C, D) :-
	'known/1__9'(A, B).
'known/1__8__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N=<O),
	    N==F,
	    P=t(48, D, A),
	    'chr novel_production'(D, P),
	    'chr novel_production'(A, P)
	->  'chr extend_history'(D, P),
	    activate_constraint(Q, R, D, S),
	    (   Q==yes
	    ->  '$insert_in_store_known/1'(D),
		'attach_known/1'(R, D)
	    ;   true
	    ),
	    known(E=<O),
	    (   D=suspension(T, U, V, W, X, Y, Z),
		U=mutable(active),
		W=mutable(S)
	    ->  'chr update_mutable'(inactive, U),
		'known/1__8__0'(B, C, D, E, F)
	    ;   true
	    )
	;   'known/1__8__0'(B, C, D, E, F)
	).
'known/1__8'(A, B) :-
	'known/1__9'(A, B).
'known/1__9'(A, B) :-
	nonvar(A),
	A= (C=<D),
	'chr via_1'(C, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__9__0'(H, A, B, C, D).
'known/1__9__0'([], A, B, C, D) :-
	'known/1__10'(A, B).
'known/1__9__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N=<O),
	    O==E,
	    P=t(48, A, D),
	    'chr novel_production'(A, P),
	    'chr novel_production'(D, P)
	->  'chr extend_history'(D, P),
	    activate_constraint(Q, R, D, S),
	    (   Q==yes
	    ->  '$insert_in_store_known/1'(D),
		'attach_known/1'(R, D)
	    ;   true
	    ),
	    known(N=<F),
	    (   D=suspension(T, U, V, W, X, Y, Z),
		U=mutable(active),
		W=mutable(S)
	    ->  'chr update_mutable'(inactive, U),
		'known/1__9__0'(B, C, D, E, F)
	    ;   true
	    )
	;   'known/1__9__0'(B, C, D, E, F)
	).
'known/1__9'(A, B) :-
	'known/1__10'(A, B).
'known/1__10'(A, B) :-
	nonvar(A),
	A= (C=<D),
	'chr via_1'(D, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__10__0'(H, A, B, C, D).
'known/1__10__0'([], A, B, C, D) :-
	'known/1__11'(A, B).
'known/1__10__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N=<O),
	    N==F,
	    'chr via_2'(F, O, P),
	    get_attr(P, guard_entailment, Q),
	    Q=v(R, S, T),
	    R/\1=:=1
	->  'known/1__10__1'(S, O, A, B, C, D, E, F)
	;   'known/1__10__0'(B, C, D, E, F)
	).
'known/1__10__1'([], A, B, C, D, E, F, G) :-
	'known/1__10__0'(C, D, E, F, G).
'known/1__10__1'([A|B], C, D, E, F, G, H, I) :-
	(   A=suspension(J, K, L, M, N, O, P),
	    K=mutable(active),
	    nonvar(P),
	    P= (Q=\=R),
	    Q==I,
	    R==C,
	    'chr via_2'(H, I, S),
	    get_attr(S, guard_entailment, T),
	    T=v(U, V, W),
	    U/\1=:=1
	->  'known/1__10__2'(V, A, B, C, D, E, F, G, H, I)
	;   'known/1__10__1'(B, C, D, E, F, G, H, I)
	).
'known/1__10__2'([], A, B, C, D, E, F, G, H, I) :-
	'known/1__10__1'(B, C, D, E, F, G, H, I).
'known/1__10__2'([A|B], C, D, E, F, G, H, I, J, K) :-
	(   A=suspension(L, M, N, O, P, Q, R),
	    M=mutable(active),
	    A\==C,
	    nonvar(R),
	    R= (S=\=T),
	    S==J,
	    T==K,
	    U=t(49, I, A, F, C),
	    'chr novel_production'(I, U),
	    'chr novel_production'(A, U),
	    'chr novel_production'(F, U),
	    'chr novel_production'(C, U)
	->  'chr extend_history'(I, U),
	    activate_constraint(V, W, I, X),
	    (   V==yes
	    ->  '$insert_in_store_known/1'(I),
		'attach_known/1'(W, I)
	    ;   true
	    ),
	    known(J=\=E),
	    (   I=suspension(Y, Z, A1, B1, C1, D1, E1),
		Z=mutable(active),
		B1=mutable(X)
	    ->  'chr update_mutable'(inactive, Z),
		'known/1__10__2'(B, C, D, E, F, G, H, I, J, K)
	    ;   true
	    )
	;   'known/1__10__2'(B, C, D, E, F, G, H, I, J, K)
	).
'known/1__10'(A, B) :-
	'known/1__11'(A, B).
'known/1__11'(A, B) :-
	nonvar(A),
	A= (C=\=D),
	'chr via_1'(D, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__11__0'(H, A, B, C, D).
'known/1__11__0'([], A, B, C, D) :-
	'known/1__12'(A, B).
'known/1__11__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N=<O),
	    N==F,
	    'chr via_2'(F, O, P),
	    get_attr(P, guard_entailment, Q),
	    Q=v(R, S, T),
	    R/\1=:=1
	->  'known/1__11__1'(S, O, A, B, C, D, E, F)
	;   'known/1__11__0'(B, C, D, E, F)
	).
'known/1__11__1'([], A, B, C, D, E, F, G) :-
	'known/1__11__0'(C, D, E, F, G).
'known/1__11__1'([A|B], C, D, E, F, G, H, I) :-
	(   A=suspension(J, K, L, M, N, O, P),
	    K=mutable(active),
	    nonvar(P),
	    P= (Q=\=R),
	    Q==I,
	    R==C,
	    'chr via_2'(H, I, S),
	    get_attr(S, guard_entailment, T),
	    T=v(U, V, W),
	    U/\1=:=1
	->  'known/1__11__2'(V, A, B, C, D, E, F, G, H, I)
	;   'known/1__11__1'(B, C, D, E, F, G, H, I)
	).
'known/1__11__2'([], A, B, C, D, E, F, G, H, I) :-
	'known/1__11__1'(B, C, D, E, F, G, H, I).
'known/1__11__2'([A|B], C, D, E, F, G, H, I, J, K) :-
	(   A=suspension(L, M, N, O, P, Q, R),
	    M=mutable(active),
	    A\==F,
	    nonvar(R),
	    R= (S=<T),
	    S==J,
	    T==K,
	    U=t(49, A, I, F, C),
	    'chr novel_production'(A, U),
	    'chr novel_production'(I, U),
	    'chr novel_production'(F, U),
	    'chr novel_production'(C, U)
	->  'chr extend_history'(I, U),
	    activate_constraint(V, W, I, X),
	    (   V==yes
	    ->  '$insert_in_store_known/1'(I),
		'attach_known/1'(W, I)
	    ;   true
	    ),
	    known(J=\=E),
	    (   I=suspension(Y, Z, A1, B1, C1, D1, E1),
		Z=mutable(active),
		B1=mutable(X)
	    ->  'chr update_mutable'(inactive, Z),
		'known/1__11__2'(B, C, D, E, F, G, H, I, J, K)
	    ;   true
	    )
	;   'known/1__11__2'(B, C, D, E, F, G, H, I, J, K)
	).
'known/1__11'(A, B) :-
	'known/1__12'(A, B).
'known/1__12'(A, B) :-
	nonvar(A),
	A= (C=<D),
	'chr via_1'(C, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__12__0'(H, A, B, C, D).
'known/1__12__0'([], A, B, C, D) :-
	'known/1__13'(A, B).
'known/1__12__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N=\=O),
	    O==E,
	    'chr via_2'(E, F, P),
	    get_attr(P, guard_entailment, Q),
	    Q=v(R, S, T),
	    R/\1=:=1
	->  'known/1__12__1'(S, N, A, B, C, D, E, F)
	;   'known/1__12__0'(B, C, D, E, F)
	).
'known/1__12__1'([], A, B, C, D, E, F, G) :-
	'known/1__12__0'(C, D, E, F, G).
'known/1__12__1'([A|B], C, D, E, F, G, H, I) :-
	(   A=suspension(J, K, L, M, N, O, P),
	    K=mutable(active),
	    A\==D,
	    nonvar(P),
	    P= (Q=\=R),
	    Q==H,
	    R==I,
	    'chr via_2'(C, H, S),
	    get_attr(S, guard_entailment, T),
	    T=v(U, V, W),
	    U/\1=:=1
	->  'known/1__12__2'(V, A, B, C, D, E, F, G, H, I)
	;   'known/1__12__1'(B, C, D, E, F, G, H, I)
	).
'known/1__12__2'([], A, B, C, D, E, F, G, H, I) :-
	'known/1__12__1'(B, C, D, E, F, G, H, I).
'known/1__12__2'([A|B], C, D, E, F, G, H, I, J, K) :-
	(   A=suspension(L, M, N, O, P, Q, R),
	    M=mutable(active),
	    nonvar(R),
	    R= (S=<T),
	    S==E,
	    T==J,
	    U=t(49, A, F, I, C),
	    'chr novel_production'(A, U),
	    'chr novel_production'(F, U),
	    'chr novel_production'(I, U),
	    'chr novel_production'(C, U)
	->  'chr extend_history'(I, U),
	    activate_constraint(V, W, I, X),
	    (   V==yes
	    ->  '$insert_in_store_known/1'(I),
		'attach_known/1'(W, I)
	    ;   true
	    ),
	    known(E=\=K),
	    (   I=suspension(Y, Z, A1, B1, C1, D1, E1),
		Z=mutable(active),
		B1=mutable(X)
	    ->  'chr update_mutable'(inactive, Z),
		'known/1__12__2'(B, C, D, E, F, G, H, I, J, K)
	    ;   true
	    )
	;   'known/1__12__2'(B, C, D, E, F, G, H, I, J, K)
	).
'known/1__12'(A, B) :-
	'known/1__13'(A, B).
'known/1__13'(A, B) :-
	nonvar(A),
	A= (C=\=D),
	'chr via_1'(C, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__13__0'(H, A, B, C, D).
'known/1__13__0'([], A, B, C, D) :-
	'known/1__14'(A, B).
'known/1__13__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N=\=O),
	    O==E,
	    'chr via_2'(E, F, P),
	    get_attr(P, guard_entailment, Q),
	    Q=v(R, S, T),
	    R/\1=:=1
	->  'known/1__13__1'(S, N, A, B, C, D, E, F)
	;   'known/1__13__0'(B, C, D, E, F)
	).
'known/1__13__1'([], A, B, C, D, E, F, G) :-
	'known/1__13__0'(C, D, E, F, G).
'known/1__13__1'([A|B], C, D, E, F, G, H, I) :-
	(   A=suspension(J, K, L, M, N, O, P),
	    K=mutable(active),
	    nonvar(P),
	    P= (Q=<R),
	    Q==H,
	    R==I,
	    'chr via_2'(C, H, S),
	    get_attr(S, guard_entailment, T),
	    T=v(U, V, W),
	    U/\1=:=1
	->  'known/1__13__2'(V, A, B, C, D, E, F, G, H, I)
	;   'known/1__13__1'(B, C, D, E, F, G, H, I)
	).
'known/1__13__2'([], A, B, C, D, E, F, G, H, I) :-
	'known/1__13__1'(B, C, D, E, F, G, H, I).
'known/1__13__2'([A|B], C, D, E, F, G, H, I, J, K) :-
	(   A=suspension(L, M, N, O, P, Q, R),
	    M=mutable(active),
	    A\==C,
	    nonvar(R),
	    R= (S=<T),
	    S==E,
	    T==J,
	    U=t(49, A, F, C, I),
	    'chr novel_production'(A, U),
	    'chr novel_production'(F, U),
	    'chr novel_production'(C, U),
	    'chr novel_production'(I, U)
	->  'chr extend_history'(I, U),
	    activate_constraint(V, W, I, X),
	    (   V==yes
	    ->  '$insert_in_store_known/1'(I),
		'attach_known/1'(W, I)
	    ;   true
	    ),
	    known(E=\=K),
	    (   I=suspension(Y, Z, A1, B1, C1, D1, E1),
		Z=mutable(active),
		B1=mutable(X)
	    ->  'chr update_mutable'(inactive, Z),
		'known/1__13__2'(B, C, D, E, F, G, H, I, J, K)
	    ;   true
	    )
	;   'known/1__13__2'(B, C, D, E, F, G, H, I, J, K)
	).
'known/1__13'(A, B) :-
	'known/1__14'(A, B).
'known/1__14'(A, B) :-
	nonvar(A),
	A= (C=:=D),
	ground(D),
	ground(C),
	C=\=D, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__14'(A, B) :-
	nonvar(A),
	A= (C=\=D),
	ground(D),
	ground(C),
	C=:=D, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__14'(A, B) :-
	nonvar(A),
	A= (C=\=D),
	D==C, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__14'(A, B) :-
	nonvar(A),
	A= (C=:=D),
	'chr via_2'(C, D, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1,
	'chr sbag_member'(J, H),
	J=suspension(K, L, M, N, O, P, Q),
	L=mutable(active),
	nonvar(Q),
	Q= (R=\=S),
	R==C,
	S==D, !,
	remove_constraint_internal(J, T, U),
	(   U==yes
	->  '$delete_from_store_known/1'(J),
	    'detach_known/1'(T, J)
	;   true
	),
	(   var(B)
	->  true
	;   remove_constraint_internal(B, V, W),
	    (   W==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(V, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__14'(A, B) :-
	nonvar(A),
	A= (C=\=D),
	'chr via_2'(C, D, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1,
	'chr sbag_member'(J, H),
	J=suspension(K, L, M, N, O, P, Q),
	L=mutable(active),
	nonvar(Q),
	Q= (R=:=S),
	R==C,
	S==D, !,
	remove_constraint_internal(J, T, U),
	(   U==yes
	->  '$delete_from_store_known/1'(J),
	    'detach_known/1'(T, J)
	;   true
	),
	(   var(B)
	->  true
	;   remove_constraint_internal(B, V, W),
	    (   W==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(V, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__14'(A, B) :-
	nonvar(A),
	A= (C=:=D),
	'chr via_1'(D, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__14__0'(H, A, B, C, D).
'known/1__14__0'([], A, B, C, D) :-
	'known/1__15'(A, B).
'known/1__14__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N=:=O),
	    N==F,
	    P=t(54, D, A),
	    'chr novel_production'(D, P),
	    'chr novel_production'(A, P),
	    E\==O
	->  'chr extend_history'(D, P),
	    activate_constraint(Q, R, D, S),
	    (   Q==yes
	    ->  '$insert_in_store_known/1'(D),
		'attach_known/1'(R, D)
	    ;   true
	    ),
	    known(E=:=O),
	    (   D=suspension(T, U, V, W, X, Y, Z),
		U=mutable(active),
		W=mutable(S)
	    ->  'chr update_mutable'(inactive, U),
		'known/1__14__0'(B, C, D, E, F)
	    ;   true
	    )
	;   'known/1__14__0'(B, C, D, E, F)
	).
'known/1__14'(A, B) :-
	'known/1__15'(A, B).
'known/1__15'(A, B) :-
	nonvar(A),
	A= (C=:=D),
	'chr via_1'(C, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__15__0'(H, A, B, C, D).
'known/1__15__0'([], A, B, C, D) :-
	'known/1__16'(A, B).
'known/1__15__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N=:=O),
	    O==E,
	    P=t(54, A, D),
	    'chr novel_production'(A, P),
	    'chr novel_production'(D, P),
	    N\==F
	->  'chr extend_history'(D, P),
	    activate_constraint(Q, R, D, S),
	    (   Q==yes
	    ->  '$insert_in_store_known/1'(D),
		'attach_known/1'(R, D)
	    ;   true
	    ),
	    known(N=:=F),
	    (   D=suspension(T, U, V, W, X, Y, Z),
		U=mutable(active),
		W=mutable(S)
	    ->  'chr update_mutable'(inactive, U),
		'known/1__15__0'(B, C, D, E, F)
	    ;   true
	    )
	;   'known/1__15__0'(B, C, D, E, F)
	).
'known/1__15'(A, B) :-
	'known/1__16'(A, B).
'known/1__16'(A, B) :-
	nonvar(A),
	A= (C=:=D),
	'chr novel_production'(B, 55), !,
	'chr extend_history'(B, 55),
	activate_constraint(E, F, B, G),
	(   E==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(F, B)
	;   true
	),
	known(D=:=C),
	(   B=suspension(H, I, J, K, L, M, N),
	    I=mutable(active),
	    K=mutable(G)
	->  'chr update_mutable'(inactive, I),
	    'known/1__17'(A, B)
	;   true
	).
'known/1__16'(A, B) :-
	'known/1__17'(A, B).
'known/1__17'(A, B) :-
	nonvar(A),
	A= (C=\=D),
	'chr novel_production'(B, 56), !,
	'chr extend_history'(B, 56),
	activate_constraint(E, F, B, G),
	(   E==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(F, B)
	;   true
	),
	known(D=\=C),
	(   B=suspension(H, I, J, K, L, M, N),
	    I=mutable(active),
	    K=mutable(G)
	->  'chr update_mutable'(inactive, I),
	    'known/1__18'(A, B)
	;   true
	).
'known/1__17'(A, B) :-
	'known/1__18'(A, B).
'known/1__18'(A, B) :-
	nonvar(A),
	A=number(C),
	nonvar(C),
	\+number(C), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, D, E),
	    (   E==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(D, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__18'(A, B) :-
	nonvar(A),
	A=float(C),
	nonvar(C),
	\+float(C), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, D, E),
	    (   E==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(D, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__18'(A, B) :-
	nonvar(A),
	A=integer(C),
	nonvar(C),
	\+integer(C), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, D, E),
	    (   E==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(D, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__18'(A, B) :-
	nonvar(A),
	A=integer(C),
	'chr novel_production'(B, 60), !,
	'chr extend_history'(B, 60),
	activate_constraint(D, E, B, F),
	(   D==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(E, B)
	;   true
	),
	known(number(C)),
	(   B=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    J=mutable(F)
	->  'chr update_mutable'(inactive, H),
	    'known/1__19'(A, B)
	;   true
	).
'known/1__18'(A, B) :-
	'known/1__19'(A, B).
'known/1__19'(A, B) :-
	nonvar(A),
	A=float(C),
	'chr novel_production'(B, 61), !,
	'chr extend_history'(B, 61),
	activate_constraint(D, E, B, F),
	(   D==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(E, B)
	;   true
	),
	known(number(C)),
	(   B=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    J=mutable(F)
	->  'chr update_mutable'(inactive, H),
	    'known/1__20'(A, B)
	;   true
	).
'known/1__19'(A, B) :-
	'known/1__20'(A, B).
'known/1__20'(A, B) :-
	'chr via_1'(A, C),
	get_attr(C, guard_entailment, D),
	D=v(E, F, G),
	E/\1=:=1,
	'chr sbag_member'(H, F),
	H=suspension(I, J, K, L, M, N, O),
	J=mutable(active),
	nonvar(O),
	O= (\+P),
	P==A, !,
	remove_constraint_internal(H, Q, R),
	(   R==yes
	->  '$delete_from_store_known/1'(H),
	    'detach_known/1'(Q, H)
	;   true
	),
	(   var(B)
	->  true
	;   remove_constraint_internal(B, S, T),
	    (   T==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(S, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__20'(A, B) :-
	nonvar(A),
	A= (\+C),
	'chr via_1'(C, D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\1=:=1,
	'chr sbag_member'(I, G),
	I=suspension(J, K, L, M, N, O, P),
	K=mutable(active),
	P==C, !,
	remove_constraint_internal(I, Q, R),
	(   R==yes
	->  '$delete_from_store_known/1'(I),
	    'detach_known/1'(Q, I)
	;   true
	),
	(   var(B)
	->  true
	;   remove_constraint_internal(B, S, T),
	    (   T==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(S, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__20'(A, B) :-
	nonvar(A),
	A= (C\==D),
	'chr via_2'(C, D, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1,
	'chr sbag_member'(J, H),
	J=suspension(K, L, M, N, O, P, Q),
	L=mutable(active),
	nonvar(Q),
	Q= (R==S),
	R==C,
	S==D, !,
	remove_constraint_internal(J, T, U),
	(   U==yes
	->  '$delete_from_store_known/1'(J),
	    'detach_known/1'(T, J)
	;   true
	),
	(   var(B)
	->  true
	;   remove_constraint_internal(B, V, W),
	    (   W==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(V, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__20'(A, B) :-
	nonvar(A),
	A= (C==D),
	'chr via_2'(C, D, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1,
	'chr sbag_member'(J, H),
	J=suspension(K, L, M, N, O, P, Q),
	L=mutable(active),
	nonvar(Q),
	Q= (R\==S),
	R==C,
	S==D, !,
	remove_constraint_internal(J, T, U),
	(   U==yes
	->  '$delete_from_store_known/1'(J),
	    'detach_known/1'(T, J)
	;   true
	),
	(   var(B)
	->  true
	;   remove_constraint_internal(B, V, W),
	    (   W==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(V, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__20'(A, B) :-
	nonvar(A),
	A= (C==D),
	'chr via_1'(D, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__20__0'(H, A, B, C, D).
'known/1__20__0'([], A, B, C, D) :-
	'known/1__21'(A, B).
'known/1__20__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N==O),
	    N==F,
	    P=t(64, D, A),
	    'chr novel_production'(D, P),
	    'chr novel_production'(A, P)
	->  'chr extend_history'(D, P),
	    activate_constraint(Q, R, D, S),
	    (   Q==yes
	    ->  '$insert_in_store_known/1'(D),
		'attach_known/1'(R, D)
	    ;   true
	    ),
	    known(E==O),
	    (   D=suspension(T, U, V, W, X, Y, Z),
		U=mutable(active),
		W=mutable(S)
	    ->  'chr update_mutable'(inactive, U),
		'known/1__20__0'(B, C, D, E, F)
	    ;   true
	    )
	;   'known/1__20__0'(B, C, D, E, F)
	).
'known/1__20'(A, B) :-
	'known/1__21'(A, B).
'known/1__21'(A, B) :-
	nonvar(A),
	A= (C==D),
	'chr via_1'(C, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__21__0'(H, A, B, C, D).
'known/1__21__0'([], A, B, C, D) :-
	'known/1__22'(A, B).
'known/1__21__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N==O),
	    O==E,
	    P=t(64, A, D),
	    'chr novel_production'(A, P),
	    'chr novel_production'(D, P)
	->  'chr extend_history'(D, P),
	    activate_constraint(Q, R, D, S),
	    (   Q==yes
	    ->  '$insert_in_store_known/1'(D),
		'attach_known/1'(R, D)
	    ;   true
	    ),
	    known(N==F),
	    (   D=suspension(T, U, V, W, X, Y, Z),
		U=mutable(active),
		W=mutable(S)
	    ->  'chr update_mutable'(inactive, U),
		'known/1__21__0'(B, C, D, E, F)
	    ;   true
	    )
	;   'known/1__21__0'(B, C, D, E, F)
	).
'known/1__21'(A, B) :-
	'known/1__22'(A, B).
'known/1__22'(A, B) :-
	nonvar(A),
	A= (C==D),
	'chr via_1'(D, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__22__0'(H, A, B, C, D).
'known/1__22__0'([], A, B, C, D) :-
	'known/1__23'(A, B).
'known/1__22__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N\==O),
	    N==F,
	    P=t(65, D, A),
	    'chr novel_production'(D, P),
	    'chr novel_production'(A, P)
	->  'chr extend_history'(D, P),
	    activate_constraint(Q, R, D, S),
	    (   Q==yes
	    ->  '$insert_in_store_known/1'(D),
		'attach_known/1'(R, D)
	    ;   true
	    ),
	    known(E\==O),
	    (   D=suspension(T, U, V, W, X, Y, Z),
		U=mutable(active),
		W=mutable(S)
	    ->  'chr update_mutable'(inactive, U),
		'known/1__22__0'(B, C, D, E, F)
	    ;   true
	    )
	;   'known/1__22__0'(B, C, D, E, F)
	).
'known/1__22'(A, B) :-
	'known/1__23'(A, B).
'known/1__23'(A, B) :-
	nonvar(A),
	A= (C\==D),
	'chr via_1'(C, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1, !,
	'known/1__23__0'(H, A, B, C, D).
'known/1__23__0'([], A, B, C, D) :-
	'known/1__24'(A, B).
'known/1__23__0'([A|B], C, D, E, F) :-
	(   A=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    nonvar(M),
	    M= (N==O),
	    O==E,
	    P=t(65, A, D),
	    'chr novel_production'(A, P),
	    'chr novel_production'(D, P)
	->  'chr extend_history'(D, P),
	    activate_constraint(Q, R, D, S),
	    (   Q==yes
	    ->  '$insert_in_store_known/1'(D),
		'attach_known/1'(R, D)
	    ;   true
	    ),
	    known(N\==F),
	    (   D=suspension(T, U, V, W, X, Y, Z),
		U=mutable(active),
		W=mutable(S)
	    ->  'chr update_mutable'(inactive, U),
		'known/1__23__0'(B, C, D, E, F)
	    ;   true
	    )
	;   'known/1__23__0'(B, C, D, E, F)
	).
'known/1__23'(A, B) :-
	'known/1__24'(A, B).
'known/1__24'(A, B) :-
	nonvar(A),
	A= (C==D),
	'chr novel_production'(B, 66), !,
	'chr extend_history'(B, 66),
	activate_constraint(E, F, B, G),
	(   E==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(F, B)
	;   true
	),
	known(D==C),
	(   B=suspension(H, I, J, K, L, M, N),
	    I=mutable(active),
	    K=mutable(G)
	->  'chr update_mutable'(inactive, I),
	    'known/1__25'(A, B)
	;   true
	).
'known/1__24'(A, B) :-
	'known/1__25'(A, B).
'known/1__25'(A, B) :-
	nonvar(A),
	A= (C\==D),
	'chr novel_production'(B, 67), !,
	'chr extend_history'(B, 67),
	activate_constraint(E, F, B, G),
	(   E==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(F, B)
	;   true
	),
	known(D\==C),
	(   B=suspension(H, I, J, K, L, M, N),
	    I=mutable(active),
	    K=mutable(G)
	->  'chr update_mutable'(inactive, I),
	    'known/1__26'(A, B)
	;   true
	).
'known/1__25'(A, B) :-
	'known/1__26'(A, B).
'known/1__26'(A, B) :-
	nonvar(A),
	A= (C\==D),
	D==C,
	'chr novel_production'(B, 68), !,
	'chr extend_history'(B, 68),
	activate_constraint(E, F, B, G),
	(   E==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(F, B)
	;   true
	),
	known(fail),
	(   B=suspension(H, I, J, K, L, M, N),
	    I=mutable(active),
	    K=mutable(G)
	->  'chr update_mutable'(inactive, I),
	    'known/1__27'(A, B)
	;   true
	).
'known/1__26'(A, B) :-
	'known/1__27'(A, B).
'known/1__27'(A, B) :-
	nonvar(A),
	A= (C\==D),
	nonvar(D),
	nonvar(C),
	'chr lock'(C),
	functor(C, E, F),
	chr_runtime:unlock(C), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, G, H),
	    (   H==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(G, B)
	    ;   true
	    )
	),
	(   functor(D, E, F)
	->  C=..[E|I],
	    D=..[E|J],
	    add_args_nmatch(I, J, K),
	    known(K)
	;   true
	).
'known/1__27'(A, B) :-
	nonvar(A),
	A= (C==D),
	'chr novel_production'(B, 70), !,
	'chr extend_history'(B, 70),
	activate_constraint(E, F, B, G),
	(   E==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(F, B)
	;   true
	),
	known(C=D),
	(   B=suspension(H, I, J, K, L, M, N),
	    I=mutable(active),
	    K=mutable(G)
	->  'chr update_mutable'(inactive, I),
	    'known/1__28'(A, B)
	;   true
	).
'known/1__27'(A, B) :-
	'known/1__28'(A, B).
'known/1__28'(A, B) :-
	nonvar(A),
	A=ground(C),
	'chr novel_production'(B, 71), !,
	'chr extend_history'(B, 71),
	activate_constraint(D, E, B, F),
	(   D==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(E, B)
	;   true
	),
	known(nonvar(C)),
	(   B=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    J=mutable(F)
	->  'chr update_mutable'(inactive, H),
	    'known/1__29'(A, B)
	;   true
	).
'known/1__28'(A, B) :-
	'known/1__29'(A, B).
'known/1__29'(A, B) :-
	nonvar(A),
	A=compound(C),
	'chr novel_production'(B, 72), !,
	'chr extend_history'(B, 72),
	activate_constraint(D, E, B, F),
	(   D==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(E, B)
	;   true
	),
	known(nonvar(C)),
	(   B=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    J=mutable(F)
	->  'chr update_mutable'(inactive, H),
	    'known/1__30'(A, B)
	;   true
	).
'known/1__29'(A, B) :-
	'known/1__30'(A, B).
'known/1__30'(A, B) :-
	nonvar(A),
	A=atomic(C),
	'chr novel_production'(B, 73), !,
	'chr extend_history'(B, 73),
	activate_constraint(D, E, B, F),
	(   D==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(E, B)
	;   true
	),
	known(nonvar(C)),
	(   B=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    J=mutable(F)
	->  'chr update_mutable'(inactive, H),
	    'known/1__31'(A, B)
	;   true
	).
'known/1__30'(A, B) :-
	'known/1__31'(A, B).
'known/1__31'(A, B) :-
	nonvar(A),
	A=number(C),
	'chr novel_production'(B, 74), !,
	'chr extend_history'(B, 74),
	activate_constraint(D, E, B, F),
	(   D==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(E, B)
	;   true
	),
	known(nonvar(C)),
	(   B=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    J=mutable(F)
	->  'chr update_mutable'(inactive, H),
	    'known/1__32'(A, B)
	;   true
	).
'known/1__31'(A, B) :-
	'known/1__32'(A, B).
'known/1__32'(A, B) :-
	nonvar(A),
	A=atom(C),
	'chr novel_production'(B, 75), !,
	'chr extend_history'(B, 75),
	activate_constraint(D, E, B, F),
	(   D==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(E, B)
	;   true
	),
	known(nonvar(C)),
	(   B=suspension(G, H, I, J, K, L, M),
	    H=mutable(active),
	    J=mutable(F)
	->  'chr update_mutable'(inactive, H),
	    'known/1__33'(A, B)
	;   true
	).
'known/1__32'(A, B) :-
	'known/1__33'(A, B).
'known/1__33'(A, B) :-
	nonvar(A),
	A=var(C),
	'chr via_1'(C, D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\1=:=1,
	'chr sbag_member'(I, G),
	I=suspension(J, K, L, M, N, O, P),
	K=mutable(active),
	nonvar(P),
	P=nonvar(Q),
	Q==C, !,
	remove_constraint_internal(I, R, S),
	(   S==yes
	->  '$delete_from_store_known/1'(I),
	    'detach_known/1'(R, I)
	;   true
	),
	(   var(B)
	->  true
	;   remove_constraint_internal(B, T, U),
	    (   U==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(T, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__33'(A, B) :-
	nonvar(A),
	A=nonvar(C),
	'chr via_1'(C, D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\1=:=1,
	'chr sbag_member'(I, G),
	I=suspension(J, K, L, M, N, O, P),
	K=mutable(active),
	nonvar(P),
	P=var(Q),
	Q==C, !,
	remove_constraint_internal(I, R, S),
	(   S==yes
	->  '$delete_from_store_known/1'(I),
	    'detach_known/1'(R, I)
	;   true
	),
	(   var(B)
	->  true
	;   remove_constraint_internal(B, T, U),
	    (   U==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(T, B)
	    ;   true
	    )
	),
	known(fail).
'known/1__33'(A, B) :-
	nonvar(A),
	A= (C;D),
	nonvar(C),
	C= (\+E),
	'chr via_1'(E, F),
	get_attr(F, guard_entailment, G),
	G=v(H, I, J),
	H/\1=:=1,
	'chr sbag_member'(K, I),
	K=suspension(L, M, N, O, P, Q, R),
	M=mutable(active),
	R==E, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, S, T),
	    (   T==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(S, B)
	    ;   true
	    )
	),
	known(D).
'known/1__33'(A, B) :-
	'chr via_1'(A, C),
	get_attr(C, guard_entailment, D),
	D=v(E, F, G),
	E/\1=:=1, !,
	'known/1__33__0'(F, A, B).
'known/1__33__0'([], A, B) :-
	'known/1__34'(A, B).
'known/1__33__0'([A|B], C, D) :-
	(   A=suspension(E, F, G, H, I, J, K),
	    F=mutable(active),
	    nonvar(K),
	    K= (L;M),
	    nonvar(L),
	    L= (\+N),
	    N==C
	->  remove_constraint_internal(A, O, P),
	    (   P==yes
	    ->  '$delete_from_store_known/1'(A),
		'detach_known/1'(O, A)
	    ;   true
	    ),
	    activate_constraint(Q, R, D, S),
	    (   Q==yes
	    ->  '$insert_in_store_known/1'(D),
		'attach_known/1'(R, D)
	    ;   true
	    ),
	    known(M),
	    (   D=suspension(T, U, V, W, X, Y, Z),
		U=mutable(active),
		W=mutable(S)
	    ->  'chr update_mutable'(inactive, U),
		'known/1__33__0'(B, C, D)
	    ;   true
	    )
	;   'known/1__33__0'(B, C, D)
	).
'known/1__33'(A, B) :-
	'known/1__34'(A, B).
'known/1__34'(A, B) :-
	nonvar(A),
	A= (C;D),
	nonvar(C),
	C= (E, F),
	nonvar(E),
	E= (\+G),
	'chr via_1'(G, H),
	get_attr(H, guard_entailment, I),
	I=v(J, K, L),
	J/\1=:=1,
	'chr sbag_member'(M, K),
	M=suspension(N, O, P, Q, R, S, T),
	O=mutable(active),
	T==G, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, U, V),
	    (   V==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(U, B)
	    ;   true
	    )
	),
	known(D).
'known/1__34'(A, B) :-
	'chr via_1'(A, C),
	get_attr(C, guard_entailment, D),
	D=v(E, F, G),
	E/\1=:=1, !,
	'known/1__34__0'(F, A, B).
'known/1__34__0'([], A, B) :-
	'known/1__35'(A, B).
'known/1__34__0'([A|B], C, D) :-
	(   A=suspension(E, F, G, H, I, J, K),
	    F=mutable(active),
	    nonvar(K),
	    K= (L;M),
	    nonvar(L),
	    L= (N, O),
	    nonvar(N),
	    N= (\+P),
	    P==C
	->  remove_constraint_internal(A, Q, R),
	    (   R==yes
	    ->  '$delete_from_store_known/1'(A),
		'detach_known/1'(Q, A)
	    ;   true
	    ),
	    activate_constraint(S, T, D, U),
	    (   S==yes
	    ->  '$insert_in_store_known/1'(D),
		'attach_known/1'(T, D)
	    ;   true
	    ),
	    known(M),
	    (   D=suspension(V, W, X, Y, Z, A1, B1),
		W=mutable(active),
		Y=mutable(U)
	    ->  'chr update_mutable'(inactive, W),
		'known/1__34__0'(B, C, D)
	    ;   true
	    )
	;   'known/1__34__0'(B, C, D)
	).
'known/1__34'(A, B) :-
	'known/1__35'(A, B).
'known/1__35'(A, B) :-
	nonvar(A),
	A= (C;D),
	'chr via_1'(C, E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\1=:=1,
	'chr sbag_member'(J, H),
	J=suspension(K, L, M, N, O, P, Q),
	L=mutable(active),
	nonvar(Q),
	Q= (\+R),
	R==C, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, S, T),
	    (   T==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(S, B)
	    ;   true
	    )
	),
	known(D).
'known/1__35'(A, B) :-
	nonvar(A),
	A= (\+C),
	'chr via_1'(C, D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\1=:=1, !,
	'known/1__35__0'(G, A, B, C).
'known/1__35__0'([], A, B, C) :-
	'known/1__36'(A, B).
'known/1__35__0'([A|B], C, D, E) :-
	(   A=suspension(F, G, H, I, J, K, L),
	    G=mutable(active),
	    nonvar(L),
	    L= (M;N),
	    M==E
	->  remove_constraint_internal(A, O, P),
	    (   P==yes
	    ->  '$delete_from_store_known/1'(A),
		'detach_known/1'(O, A)
	    ;   true
	    ),
	    activate_constraint(Q, R, D, S),
	    (   Q==yes
	    ->  '$insert_in_store_known/1'(D),
		'attach_known/1'(R, D)
	    ;   true
	    ),
	    known(N),
	    (   D=suspension(T, U, V, W, X, Y, Z),
		U=mutable(active),
		W=mutable(S)
	    ->  'chr update_mutable'(inactive, U),
		'known/1__35__0'(B, C, D, E)
	    ;   true
	    )
	;   'known/1__35__0'(B, C, D, E)
	).
'known/1__35'(A, B) :-
	'known/1__36'(A, B).
'known/1__36'(A, B) :-
	nonvar(A),
	A= (C;D),
	nonvar(C),
	C= (E, F),
	'chr via_1'(E, G),
	get_attr(G, guard_entailment, H),
	H=v(I, J, K),
	I/\1=:=1,
	'chr sbag_member'(L, J),
	L=suspension(M, N, O, P, Q, R, S),
	N=mutable(active),
	nonvar(S),
	S= (\+T),
	T==E, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, U, V),
	    (   V==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(U, B)
	    ;   true
	    )
	),
	known(D).
'known/1__36'(A, B) :-
	nonvar(A),
	A= (\+C),
	'chr via_1'(C, D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\1=:=1, !,
	'known/1__36__0'(G, A, B, C).
'known/1__36__0'([], A, B, C) :-
	'known/1__37'(A, B).
'known/1__36__0'([A|B], C, D, E) :-
	(   A=suspension(F, G, H, I, J, K, L),
	    G=mutable(active),
	    nonvar(L),
	    L= (M;N),
	    nonvar(M),
	    M= (O, P),
	    O==E
	->  remove_constraint_internal(A, Q, R),
	    (   R==yes
	    ->  '$delete_from_store_known/1'(A),
		'detach_known/1'(Q, A)
	    ;   true
	    ),
	    activate_constraint(S, T, D, U),
	    (   S==yes
	    ->  '$insert_in_store_known/1'(D),
		'attach_known/1'(T, D)
	    ;   true
	    ),
	    known(N),
	    (   D=suspension(V, W, X, Y, Z, A1, B1),
		W=mutable(active),
		Y=mutable(U)
	    ->  'chr update_mutable'(inactive, W),
		'known/1__36__0'(B, C, D, E)
	    ;   true
	    )
	;   'known/1__36__0'(B, C, D, E)
	).
'known/1__36'(A, B) :-
	'known/1__37'(A, B).
'known/1__37'(A, B) :-
	nonvar(A),
	A= (C;D),
	C==fail, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(D).
'known/1__37'(A, B) :-
	nonvar(A),
	A= (C;D),
	D==fail, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, E, F),
	    (   F==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(E, B)
	    ;   true
	    )
	),
	known(C).
'known/1__37'(A, B) :-
	nonvar(A),
	A= (C;D),
	nonvar(C),
	C= (\+E),
	nonvar(E),
	E=functor(F, G, H),
	'chr via_1'(F, I),
	get_attr(I, guard_entailment, J),
	J=v(K, L, M),
	K/\1=:=1,
	'chr sbag_member'(N, L),
	N=suspension(O, P, Q, R, S, T, U),
	P=mutable(active),
	nonvar(U),
	U=functor(V, W, X),
	V==F, !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, Y, Z),
	    (   Z==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(Y, B)
	    ;   true
	    )
	).
'known/1__37'(A, B) :-
	nonvar(A),
	A=functor(C, D, E),
	'chr via_1'(C, F),
	get_attr(F, guard_entailment, G),
	G=v(H, I, J),
	H/\1=:=1, !,
	'known/1__37__0'(I, A, B, C).
'known/1__37__0'([], A, B, C) :-
	'known/1__38'(A, B).
'known/1__37__0'([A|B], C, D, E) :-
	(   A=suspension(F, G, H, I, J, K, L),
	    G=mutable(active),
	    nonvar(L),
	    L= (M;N),
	    nonvar(M),
	    M= (\+O),
	    nonvar(O),
	    O=functor(P, Q, R),
	    P==E
	->  remove_constraint_internal(A, S, T),
	    (   T==yes
	    ->  '$delete_from_store_known/1'(A),
		'detach_known/1'(S, A)
	    ;   true
	    ),
	    'known/1__37__0'(B, C, D, E)
	;   'known/1__37__0'(B, C, D, E)
	).
'known/1__37'(A, B) :-
	'known/1__38'(A, B).
'known/1__38'(A, B) :-
	nonvar(A),
	A= (C;D),
	nonvar(C),
	C= (\+E),
	nonvar(E),
	E=functor(F, G, H),
	nonvar(F),
	'chr lock'(F),
	'chr lock'(G),
	'chr lock'(H),
	functor(F, G, H),
	chr_runtime:unlock(F),
	chr_runtime:unlock(G),
	chr_runtime:unlock(H), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, I, J),
	    (   J==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(I, B)
	    ;   true
	    )
	),
	known(D).
'known/1__38'(A, B) :-
	nonvar(A),
	A= (C;D),
	nonvar(C),
	C= (\+E),
	nonvar(E),
	E=functor(F, G, H),
	nonvar(F), !,
	(   var(B)
	->  true
	;   remove_constraint_internal(B, I, J),
	    (   J==yes
	    ->  '$delete_from_store_known/1'(B),
		'detach_known/1'(I, B)
	    ;   true
	    )
	).
'known/1__38'(A, B) :-
	activate_constraint(C, D, B, E),
	(   C==yes
	->  '$insert_in_store_known/1'(B),
	    'attach_known/1'(D, B)
	;   true
	).
test(A) :-
	'chr global_term_ref_1'(B),
	get_attr(B, guard_entailment, C),
	C=v(D, E, F),
	D/\1=:=1,
	'chr sbag_member'(G, E),
	G=suspension(H, I, J, K, L, M, N),
	I=mutable(active),
	N==fail, !.
test(A) :-
	'chr via_1'(A, B),
	get_attr(B, guard_entailment, C),
	C=v(D, E, F),
	D/\1=:=1,
	'chr sbag_member'(G, E),
	G=suspension(H, I, J, K, L, M, N),
	I=mutable(active),
	N==A, !.
test(A) :-
	nonvar(A),
	A= (B\==C),
	nonvar(B), !,
	test(C\==B).
test(A) :-
	nonvar(A),
	A= (B\==C),
	nonvar(C),
	'chr lock'(C),
	functor(C, D, E),
	chr_runtime:unlock(C), !,
	C=..[F|G],
	length(H, E),
	I=..[D|H],
	add_args_nmatch(H, G, J),
	K= (\+functor(B, D, E);functor(B, D, E), B=I, J),
	test(K).
test(A) :-
	nonvar(A),
	A= (B=<C),
	'chr via_2'(B, C, D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\1=:=1,
	'chr sbag_member'(I, G),
	I=suspension(J, K, L, M, N, O, P),
	K=mutable(active),
	nonvar(P),
	P= (Q=:=R),
	Q==B,
	R==C, !.
test(A) :-
	nonvar(A),
	A= (B=<C),
	ground(C),
	'chr via_1'(B, D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\1=:=1,
	'chr sbag_member'(I, G),
	I=suspension(J, K, L, M, N, O, P),
	K=mutable(active),
	nonvar(P),
	P= (Q=:=R),
	Q==B,
	ground(R),
	R=<C, !.
test(A) :-
	nonvar(A),
	A= (B=<C),
	ground(B),
	'chr via_1'(C, D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\1=:=1,
	'chr sbag_member'(I, G),
	I=suspension(J, K, L, M, N, O, P),
	K=mutable(active),
	nonvar(P),
	P= (Q=:=R),
	Q==C,
	ground(R),
	B=<R, !.
test(A) :-
	nonvar(A),
	A= (B=<C),
	ground(C),
	'chr via_1'(B, D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\1=:=1,
	'chr sbag_member'(I, G),
	I=suspension(J, K, L, M, N, O, P),
	K=mutable(active),
	nonvar(P),
	P= (Q=<R),
	Q==B,
	ground(R),
	R=<C, !.
test(A) :-
	nonvar(A),
	A= (B=<C),
	ground(B),
	'chr via_1'(C, D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\1=:=1,
	'chr sbag_member'(I, G),
	I=suspension(J, K, L, M, N, O, P),
	K=mutable(active),
	nonvar(P),
	P= (Q=<R),
	R==C,
	ground(Q),
	B=<Q, !.
test(A) :-
	nonvar(A),
	A= (B=\=C),
	ground(C),
	'chr via_1'(B, D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\1=:=1,
	'chr sbag_member'(I, G),
	I=suspension(J, K, L, M, N, O, P),
	K=mutable(active),
	nonvar(P),
	P= (Q=<R),
	Q==B,
	ground(R),
	C>R, !.
test(A) :-
	nonvar(A),
	A= (B=\=C),
	ground(C),
	'chr via_1'(B, D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\1=:=1,
	'chr sbag_member'(I, G),
	I=suspension(J, K, L, M, N, O, P),
	K=mutable(active),
	nonvar(P),
	P= (Q=<R),
	R==B,
	ground(Q),
	C<Q, !.
test(A) :-
	nonvar(A),
	A= (B>C), !,
	test(C<B).
test(A) :-
	nonvar(A),
	A= (B>=C), !,
	test(C=<B).
test(A) :-
	nonvar(A),
	A= (B<C), !,
	test((B=<C, B=\=C)).
test(A) :-
	nonvar(A),
	A= (B is C), !,
	test(B=:=C).
test(A) :-
	nonvar(A),
	A= (B;C),
	B==fail, !,
	test(C).
test(A) :-
	nonvar(A),
	A= (B;C),
	C==fail, !,
	test(B).
test(A) :-
	nonvar(A),
	A= (B=C),
	'chr lock'(B),
	'chr lock'(C),
	B=C,
	chr_runtime:unlock(B),
	chr_runtime:unlock(C), !,
	B=C.
test(A) :-
	nonvar(A),
	A= (B=C),
	ground(C),
	ground(B), !,
	B=C.
test(A) :-
	nonvar(A),
	A= (B=C),
	var(C),
	nonvar(B), !,
	test(C=B).
test(A) :-
	nonvar(A),
	A= (B=C),
	nonvar(C),
	var(B),
	'chr global_term_ref_1'(D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\2=:=2,
	'chr sbag_member'(I, H),
	I=suspension(J, K, L, M, N, O, P),
	K=mutable(active),
	'chr lock'(C),
	'chr lock'(P),
	functor(C, Q, R),
	R>0,
	C=..[Q|S],
	\+all_unique_vars(S, P),
	chr_runtime:unlock(C),
	chr_runtime:unlock(P), !,
	T= (functor(B, Q, R), B=C),
	test(T).
test(A) :-
	nonvar(A),
	A= (B=C),
	nonvar(C),
	var(B),
	'chr lock'(C),
	functor(C, D, E),
	C=..[D|F],
	chr_runtime:unlock(C), !,
	G=functor(B, D, E),
	test(G).
test(A) :-
	nonvar(A),
	A= (B=C),
	nonvar(B),
	'chr lock'(C),
	functor(C, D, E),
	C=..[D|F],
	chr_runtime:unlock(C), !,
	functor(B, D, E),
	B=..[D|G],
	add_args_unif(G, F, H),
	test(H).
test(A) :-
	nonvar(A),
	A= (B=C),
	'chr global_term_ref_1'(D),
	get_attr(D, guard_entailment, E),
	E=v(F, G, H),
	F/\2=:=2,
	'chr sbag_member'(I, H),
	I=suspension(J, K, L, M, N, O, P),
	K=mutable(active),
	'chr lock'(C),
	'chr lock'(P),
	'chr lock'(B),
	\+((
	    memberchk_eq(C, P),
	    memberchk_eq(B, P)
	    )),
	chr_runtime:unlock(C),
	chr_runtime:unlock(P),
	chr_runtime:unlock(B), !,
	B=C.
test(A) :-
	nonvar(A),
	A=functor(B, C, D),
	ground(D),
	ground(C),
	var(B),
	'chr global_term_ref_1'(E),
	get_attr(E, guard_entailment, F),
	F=v(G, H, I),
	G/\2=:=2,
	'chr sbag_member'(J, I),
	J=suspension(K, L, M, N, O, P, Q),
	L=mutable(active),
	'chr lock'(B),
	'chr lock'(Q),
	\+memberchk_eq(B, Q),
	chr_runtime:unlock(B),
	chr_runtime:unlock(Q), !,
	functor(B, C, D).
test(A) :-
	A==true, !.
test(A) :-
	nonvar(A),
	A= (B==C),
	B==C, !.
test(A) :-
	nonvar(A),
	A= (B=:=C),
	B==C, !.
test(A) :-
	nonvar(A),
	A= (B=<C),
	B==C, !.
test(A) :-
	nonvar(A),
	A= (B=<C),
	ground(C),
	ground(B),
	B=<C, !.
test(A) :-
	nonvar(A),
	A= (B=<C),
	ground(C),
	ground(B), !,
	fail.
test(A) :-
	nonvar(A),
	A= (B=:=C),
	ground(C),
	ground(B),
	B=:=C, !.
test(A) :-
	nonvar(A),
	A= (B=:=C),
	ground(C),
	ground(B), !,
	fail.
test(A) :-
	nonvar(A),
	A= (B=\=C),
	ground(C),
	ground(B),
	B=\=C, !.
test(A) :-
	nonvar(A),
	A= (B=\=C),
	ground(C),
	ground(B), !,
	fail.
test(A) :-
	nonvar(A),
	A=functor(B, C, D),
	nonvar(B),
	'chr lock'(B),
	'chr lock'(C),
	'chr lock'(D),
	functor(B, C, D),
	chr_runtime:unlock(B),
	chr_runtime:unlock(C),
	chr_runtime:unlock(D), !.
test(A) :-
	nonvar(A),
	A=functor(B, C, D),
	nonvar(B), !,
	fail.
test(A) :-
	nonvar(A),
	A=ground(B),
	ground(B), !.
test(A) :-
	nonvar(A),
	A=number(B),
	number(B), !.
test(A) :-
	nonvar(A),
	A=float(B),
	float(B), !.
test(A) :-
	nonvar(A),
	A=integer(B),
	integer(B), !.
test(A) :-
	nonvar(A),
	A=number(B),
	nonvar(B), !,
	fail.
test(A) :-
	nonvar(A),
	A=float(B),
	nonvar(B), !,
	fail.
test(A) :-
	nonvar(A),
	A=integer(B),
	nonvar(B), !,
	fail.
test(A) :-
	nonvar(A),
	A= (\+B),
	nonvar(B),
	B=functor(C, D, E),
	nonvar(C),
	'chr lock'(C),
	'chr lock'(D),
	'chr lock'(E),
	functor(C, D, E),
	chr_runtime:unlock(C),
	chr_runtime:unlock(D),
	chr_runtime:unlock(E), !,
	fail.
test(A) :-
	nonvar(A),
	A= (\+B),
	nonvar(B),
	B=functor(C, D, E),
	nonvar(C), !.
test(A) :-
	nonvar(A),
	A= (\+B),
	nonvar(B),
	B=ground(C),
	ground(C), !,
	fail.
test(A) :-
	nonvar(A),
	A= (\+B),
	nonvar(B),
	B=number(C),
	number(C), !,
	fail.
test(A) :-
	nonvar(A),
	A= (\+B),
	nonvar(B),
	B=float(C),
	float(C), !,
	fail.
test(A) :-
	nonvar(A),
	A= (\+B),
	nonvar(B),
	B=integer(C),
	integer(C), !,
	fail.
test(A) :-
	nonvar(A),
	A= (\+B),
	nonvar(B),
	B=number(C),
	nonvar(C), !.
test(A) :-
	nonvar(A),
	A= (\+B),
	nonvar(B),
	B=float(C),
	nonvar(C), !.
test(A) :-
	nonvar(A),
	A= (\+B),
	nonvar(B),
	B=integer(C),
	nonvar(C), !.
test(A) :-
	nonvar(A),
	A= (B, C), !,
	test(B),
	known(B),
	test(C).
test(A) :-
	nonvar(A),
	A= (B;C), !,
	builtins:negate_b(B, D),
	builtins:negate_b(C, E),
	(   known(E),
	    test(B)
	;   known(D),
	    test(C)
	).
test(A) :-
	'chr global_term_ref_1'(B),
	get_attr(B, guard_entailment, C),
	C=v(D, E, F),
	D/\1=:=1,
	'chr sbag_member'(G, E),
	G=suspension(H, I, J, K, L, M, N),
	I=mutable(active),
	nonvar(N),
	N= (O;P), !,
	remove_constraint_internal(G, Q, R),
	(   R==yes
	->  '$delete_from_store_known/1'(G),
	    'detach_known/1'(Q, G)
	;   true
	),
	\+try(O, A), !,
	builtins:negate_b(O, S),
	known(S),
	\+try(P, A).
test(A) :-
	fail.
cleanup :-
	'chr global_term_ref_1'(A),
	get_attr(A, guard_entailment, B),
	B=v(C, D, E),
	C/\1=:=1, !,
	'cleanup/0__0__0'(D).
'cleanup/0__0__0'([]) :-
	'cleanup/0__1'.
'cleanup/0__0__0'([A|B]) :-
	(   A=suspension(C, D, E, F, G, H, I),
	    D=mutable(active)
	->  remove_constraint_internal(A, J, K),
	    (   K==yes
	    ->  '$delete_from_store_known/1'(A),
		'detach_known/1'(J, A)
	    ;   true
	    ),
	    'cleanup/0__0__0'(B)
	;   'cleanup/0__0__0'(B)
	).
cleanup :-
	'cleanup/0__1'.
'cleanup/0__1' :-
	'chr global_term_ref_1'(A),
	get_attr(A, guard_entailment, B),
	B=v(C, D, E),
	C/\2=:=2, !,
	'cleanup/0__1__0'(E).
'cleanup/0__1__0'([]) :-
	'cleanup/0__2'.
'cleanup/0__1__0'([A|B]) :-
	(   A=suspension(C, D, E, F, G, H, I),
	    D=mutable(active)
	->  remove_constraint_internal(A, J, K),
	    (   K==yes
	    ->  '$delete_from_store_variables/1'(A),
		'detach_variables/1'(J, A)
	    ;   true
	    ),
	    'cleanup/0__1__0'(B)
	;   'cleanup/0__1__0'(B)
	).
'cleanup/0__1' :-
	'cleanup/0__2'.
'cleanup/0__2'.
variables(A) :-
	'variables/1__0'(A, B).
'variables/1__0'(A, B) :-
	'chr global_term_ref_1'(C),
	get_attr(C, guard_entailment, D),
	D=v(E, F, G),
	E/\1=:=1,
	'chr sbag_member'(H, F),
	H=suspension(I, J, K, L, M, N, O),
	J=mutable(active),
	nonvar(O),
	O=functor(P, Q, R),
	ground(R),
	ground(Q),
	var(P), !,
	remove_constraint_internal(H, S, T),
	(   T==yes
	->  '$delete_from_store_known/1'(H),
	    'detach_known/1'(S, H)
	;   true
	),
	(   var(B)
	->  true
	;   remove_constraint_internal(B, U, V),
	    (   V==yes
	    ->  '$delete_from_store_variables/1'(B),
		'detach_variables/1'(U, B)
	    ;   true
	    )
	),
	functor(W, Q, R),
	P=W,
	P=..[X|Y],
	append(Y, A, Z),
	variables(Z).
'variables/1__0'(A, B) :-
	(   var(B)
	->  insert_constraint_internal(C, D, B, guard_entailment:'variables/1__0'(A, B), variables(A), [A])
	;   activate_constraint(C, D, B, E)
	),
	(   C==yes
	->  '$insert_in_store_variables/1'(B),
	    'attach_variables/1'(D, B)
	;   true
	).
:-multifile chr:'$chr_module'/1.
chr:'$chr_module'(guard_entailment).
